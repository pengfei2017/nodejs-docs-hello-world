文件docker-compose.yml放在~/registry目录下

registry:
  restart: always
  image: registry:2
  ports:
    - 5000:5000
  environment:
    REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt  //在docker swarm中以service方式运行需要这个，参看https://docs.docker.com/registry/deploying/#use-an-insecure-registry-testing-only
    REGISTRY_HTTP_TLS_KEY: /certs/domain.key //在docker swarm中以service方式运行需要这个，参看https://docs.docker.com/registry/deploying/#use-an-insecure-registry-testing-only
    REGISTRY_AUTH: htpasswd
    REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd #相对于docker-compose.yml所在~/registry目录
    REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
  volumes:
    - ~/registry/data:/var/lib/registry
    - ~/registry/certs:/certs
    - ~/registry/auth:/auth
    
    
 运行命令docker-compose up -d
 
 image: registry:2默认使用https链接     获得证书的方法请参考
 https://docs.docker.com/registry/deploying/#get-a-certificate
 测试不安全的注册表   部署纯HTTP注册表  使用自签名证书 排除不安全的注册表
 https://docs.docker.com/registry/insecure/#deploying-a-plain-http-registry

您可以在没有互联网连接的环境中运行注册表。但是，如果您依赖任何不是本地的图像构建到镜像推送到本地仓库，那么默认所依赖的不是本地的镜像不会被推送到本地仓库，若需要所有依赖都存储在本地，请按下面设置
allow-nondistributable-artifacts选项  , 注意，allow-nondistributable-artifacts选项从docker 17.6以上版本才能用，当前windowserver2016上最新版本是17.03，所以你不能用，等待官方更新吧
文件地址：编辑daemon.json位于/etc/docker/ Linux主机和C:\ProgramData\docker\config\daemon.json Windows Server上和Docker for Mac上单机Docker图标，选择 “首选项”，然后选择“+ 守护进程”，然后再选择高级选项 的文件。假设文件以前是空的，请添加以下内容：
{
  "insecure-registries" : ["myregistrydomain.com:5000"],
  "allow-nondistributable-artifacts": ["myregistrydomain.com:5000"] ##此选项从docker 17.6以上版本才能用，当前windowserver2016上最新版本是17.03，所以你不能用，等待官方更新吧
}
myregistrydomain.com应换成实际的地址，如下
{
  "insecure-registries" : ["192.168.1.124:5000"],
  "allow-nondistributable-artifacts": ["192.168.1.124:5000"]
}
参看链接https://docs.docker.com/registry/deploying/#considerations-for-air-gapped-registries 

重启docker应用
 linux上：sudo service docker restart
 Mac上：没有直接的service命令行操作，用图形界面命令osascript -e 'quit app "Docker"' && open -a Docker重启GUI的docker
 windows上：powershell命令Restart-Service docker
 
# 用htpasswd命令创建用户并设置密码
初次创建加一个-c,代表创建文件htpasswd文件
htpasswd -Bc ./htpasswd hepengfei
追加用户不用加-c,代表附加新用户到htpasswd文件中
htpasswd -B ./htpasswd testuser
从htpasswd文件中删除制定用户
htpasswd -D ./htpasswd hepengfei
#配置https和SSL证书请参考以下文章
https://www.ibm.com/developerworks/library/l-docker-private-reg/index.html
